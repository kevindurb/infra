---
apiVersion: v1
kind: Namespace
metadata:
  name: keel

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keel
  labels:
    app: keel

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keel
rules:
  - apiGroups:
      - ''
    resources:
      - namespaces
    verbs:
      - watch
      - list
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ''
      - extensions
      - apps
      - batch
    resources:
      - pods
      - replicasets
      - replicationcontrollers
      - statefulsets
      - deployments
      - daemonsets
      - jobs
      - cronjobs
    verbs:
      - get
      - delete # required to delete pods during force upgrade of the same tag
      - watch
      - list
      - update
  - apiGroups:
      - ''
    resources:
      - configmaps
      - pods/portforward
    verbs:
      - get
      - create
      - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keel
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keel
subjects:
  - kind: ServiceAccount
    name: keel
---
apiVersion: v1
kind: Service
metadata:
  name: keel
  labels:
    app: keel
spec:
  type: LoadBalancer
  ports:
    - port: 9300
      targetPort: 9300
      protocol: TCP
      name: keel
  selector:
    app: keel
  sessionAffinity: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keel
  labels:
    app: keel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keel
  template:
    metadata:
      labels:
        app: keel
    spec:
      serviceAccountName: keel
      containers:
        - name: keel
          # Note that we use appVersion to get images tag.
          image: keelhq/keel:latest
          imagePullPolicy: Always
          command: ['/bin/keel']
          env:
            - name: SLACK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: keel-env
                  key: SLACK_TOKEN
            - name: SLACK_CHANNELS
              valueFrom:
                secretKeyRef:
                  name: keel-env
                  key: SLACK_CHANNELS
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # Basic auth (to enable UI/API)
            - name: BASIC_AUTH_USER
              value: admin
            - name: BASIC_AUTH_PASSWORD
              value: password
          ports:
            - containerPort: 9300
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9300
            initialDelaySeconds: 30
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: keel
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: keel
