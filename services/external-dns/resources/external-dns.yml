---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: account

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: role
rules:
  - apiGroups: ['']
    resources: ['services', 'endpoints', 'pods']
    verbs: ['get', 'watch', 'list']
  - apiGroups: ['extensions', 'networking.k8s.io']
    resources: ['ingresses']
    verbs: ['get', 'watch', 'list']
  - apiGroups: ['']
    resources: ['nodes']
    verbs: ['list', 'watch']

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: role
subjects:
  - kind: ServiceAccount
    name: account
    namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment
spec:
  strategy:
    type: Recreate
  template:
    spec:
      serviceAccountName: account
      containers:
        - name: external-dns
          image: registry.k8s.io/external-dns/external-dns:v0.13.6
          args:
            - --registry=txt
            - --txt-owner-id=kevindurb
            - --source=ingress
            - --provider=cloudflare
            - --publish-internal-services
          env:
            - name: CF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: external-dns-cloudflare-secret
                  key: CF_API_TOKEN

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cloudflare-secret
  namespace: cert-manager
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: gitlab-secret-store
  target:
    name: external-dns-cloudflare-secret
    creationPolicy: Owner
  data:
    - secretKey: CF_API_TOKEN
      remoteRef:
        key: CF_API_TOKEN
