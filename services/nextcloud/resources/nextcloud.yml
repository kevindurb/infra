---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    spec:
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: data-volume
        - name: oidc-config
          secret:
            secretName: nextcloud-oidc-config-secret
      containers:
        - name: nextcloud
          image: docker.io/library/nextcloud:29
          env:
            - name: APACHE_DISABLE_REWRITE_IP
              value: '1'
            - name: TRUSTED_PROXIES
              value: 0.0.0.0/0
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: nextcloud-postgres-app
                  key: dbname
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: nextcloud-postgres-app
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nextcloud-postgres-app
                  key: password
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: nextcloud-postgres-app
                  key: host
          resources:
            limits:
              memory: 4G
          volumeMounts:
            - name: data-volume
              mountPath: /var/www/html
            # - name: oidc-config
            #   subPath: oidc.config.php
            #   mountPath: /var/www/html/config/oidc.config.php
            #   readOnly: true
          ports:
            - name: http
              containerPort: 80

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-volume
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 10Gi

---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
spec:
  instances: 3
  storage:
    storageClass: local-storage
    size: 5Gi
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      destinationPath: s3://postgres-wal-backups
      endpointURL: http://minio-api-service
      s3Credentials:
        accessKeyId:
          name: minio-secret
          key: MINIO_ACCESS_KEY
        secretAccessKey:
          name: minio-secret
          key: MINIO_SECRET_KEY
  # bootstrap:
  #   recovery:
  #     source: nextcloud-postgres
  # externalClusters:
  #   - name: nextcloud-postgres
  #     barmanObjectStore:
  #       serverName: nextcloud-postgres
  #       destinationPath: s3://postgres-wal-backups
  #       endpointURL: http://minio-api-service
  #       s3Credentials:
  #         accessKeyId:
  #           name: minio-secret
  #           key: MINIO_ACCESS_KEY
  #         secretAccessKey:
  #           name: minio-secret
  #           key: MINIO_SECRET_KEY
  #       wal:
  #         maxParallel: 8

---
apiVersion: v1
kind: Service
metadata:
  name: service
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
