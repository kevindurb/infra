---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment
  labels: &labels
    app.kubernetes.io/component: web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      volumes:
        - name: opt-mastodon-tmp
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      containers:
        - name: mastodon-web
          image: ghcr.io/mastodon/mastodon:v4.3.0
          command: [bundle, exec, puma, -C, config/puma.rb]
          # livenessProbe:
          #   tcpSocket:
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          # startupProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          #   initialDelaySeconds: 15
          #   failureThreshold: 30
          #   periodSeconds: 5
          resources:
            requests:
              memory: 100M
            limits:
              memory: 1G
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ALL]
          envFrom:
            - secretRef:
                name: mastodon-secret
          env: &env
            - name: RAILS_LOG_LEVEL
              value: debug
            - name: LOG_LEVEL
              value: silly
            - name: TZ
              value: America/Denver
            - name: LOCAL_DOMAIN
              value: social.durbin.casa
            - name: DEFAULT_LOCALE
              value: en
            - name: RAILS_ENV
              value: production
            - name: NODE_ENV
              value: production
            - name: REDIS_HOST
              value: mastodon-valkey-service
            - name: REDIS_PORT
              value: '6379'
            - name: SMTP_SERVER
              value: smtp-relay-service.default
            - name: SMTP_PORT
              value: '25'
            - name: SMTP_FROM_ADDRESS
              value: beavercloud@fastmail.com
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: mastodon-postgres-app
                  key: uri
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          ports:
            - name: web
              containerPort: 3000

        - name: mastodon-streaming
          image: ghcr.io/mastodon/mastodon-streaming:v4.3.0
          command: [node, ./streaming]
          # livenessProbe: &probe
          #   httpGet:
          #     path: /api/v1/streaming/health
          #     port: streaming
          # readinessProbe: *probe
          # startupProbe:
          #   <<: *probe
          #   initialDelaySeconds: 5
          #   failureThreshold: 15
          #   periodSeconds: 5
          resources:
            requests:
              memory: 100M
            limits:
              memory: 1G
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ALL]
          envFrom:
            - secretRef:
                name: mastodon-secret
          env: *env
          ports:
            - name: streaming
              containerPort: 4000

        - name: mastodon-sidekiq
          image: ghcr.io/mastodon/mastodon:v4.3.0
          command: [bundle, exec, sidekiq]
          volumeMounts:
            - name: opt-mastodon-tmp
              mountPath: /opt/mastodon/tmp
          resources:
            requests:
              memory: 100M
            limits:
              memory: 2G
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ALL]
          envFrom:
            - secretRef:
                name: mastodon-secret
          env: *env
