---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deployment
  labels: &labels
    app.kubernetes.io/component: web
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      volumes:
        - name: ripping-storage
          persistentVolumeClaim:
            claimName: truenas-ripping-storage
        - name: truenas-media
          persistentVolumeClaim:
            claimName: truenas-media
        - name: volume
          persistentVolumeClaim:
            claimName: volume
        - name: config-map
          configMap:
            name: config-map
        - name: tmp
          emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: handbrake-web-server
          image: ghcr.io/thenickoftime/handbrake-web-server:0.7.3@sha256:1bb42d405c5936ae66885002e6424fd858f6cd9472b35837828e6d40e673006c
          resources:
            requests:
              memory: 100M
            limits:
              memory: 200M
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ALL]
          volumeMounts:
            - name: volume
              mountPath: /data
            - name: tmp
              mountPath: /tmp
            - name: config-map
              mountPath: /data/config.yaml
              subPath: config.yaml
            - name: config-map
              mountPath: /data/presets/super_hq_1080.json
              subPath: super_hq_1080.json
            - name: config-map
              mountPath: /data/presets/super_hq_4k_hvec.json
              subPath: super_hq_4k_hvec.json
            - name: truenas-media
              mountPath: /media
            - name: ripping-storage
              mountPath: /ripping-storage
          env:
            - name: TZ
              value: America/Denver
          ports:
            - name: http
              containerPort: 9999

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment
  labels: &labels
    app.kubernetes.io/component: worker
spec:
  replicas: 3
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      volumes:
        - name: ripping-storage
          persistentVolumeClaim:
            claimName: truenas-ripping-storage
        - name: truenas-media
          persistentVolumeClaim:
            claimName: truenas-media
        - name: tmp
          emptyDir: {}
        - name: data
          emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: handbrake-web-worker
          image: ghcr.io/thenickoftime/handbrake-web-worker:0.7.3@sha256:e4768a28a98002610c3b2d8bb9f3d5a05ba5f87e08c8df9aec2778760b206b45
          resources:
            requests:
              memory: 1G
            limits:
              memory: 4G
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ALL]
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: data
              mountPath: /data
            - name: truenas-media
              mountPath: /media
            - name: ripping-storage
              mountPath: /ripping-storage
          env:
            - name: TZ
              value: America/Denver
            - name: SERVER_URL
              value: http://handbrake-web-service
            - name: SERVER_PORT
              value: '80'
            - name: WORKER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
