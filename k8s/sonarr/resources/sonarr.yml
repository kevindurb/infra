---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        app.kubernetes.io/component: web
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config-volume
          persistentVolumeClaim:
            claimName: config-volume
        - name: nfs-media
          persistentVolumeClaim:
            claimName: nfs-media
      containers:
        - name: sonarr
          image: ghcr.io/onedr0p/sonarr:4.0.12@sha256:55c6878a5367fc2398d15c9a16a70653f5e5f42c9fe9b708a038f2781fb0360f
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ALL]
          resources:
            requests:
              memory: 3G
            limits:
              memory: 4G
          env:
            - name: PUID
              value: '1000'
            - name: PGID
              value: '1000'
            - name: TZ
              value: America/Denver
            - name: SONARR__AUTH__METHOD
              value: External
            - name: SONARR__AUTH__REQUIRED
              value: DisabledForLocalAddresses
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config-volume
              mountPath: /config
            - name: nfs-media
              mountPath: /media
          ports:
            - name: web
              containerPort: 8989

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: config-volume
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 2Gi

---
apiVersion: v1
kind: Service
metadata:
  name: service
spec:
  ports:
    - name: web
      port: 80
      targetPort: web
